.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.14)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "File::MimeInfo::Applications 3"
.TH File::MimeInfo::Applications 3 "2010-10-02" "perl v5.12.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
File::MimeInfo::Applications \- Find programs to open a file by mimetype
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&  use File::MimeInfo::Magic;
\&  use File::MimeInfo::Applications;
\&  
\&  my $file = \*(Aq/foo/bar\*(Aq;
\&  my $mimetype = mimetype($file)
\&      || die "Could not find mimetype for $file\en";
\&      
\&  my ($default, @other) = mime_applications($mimetype);
\&  
\&  if (defined $default) {
\&      $default\->system($file)
\&  }
\&  else {
\&          # prompt user with choice from @others
\&          # ...
\&  }
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module tries to find applications that can open files
with a certain mimetype. This is done in the way suggested by
the freedesktop Desktop Entry specification. This module is 
intended to be compatible with file managers and other applications that
implement this specification.
.PP
This module depends on File::DesktopEntry being installed.
.PP
To use this module effectively you need to have the desktop-file-utils
package from freedesktop and run update-desktop-database after installing
new .desktop files.
See http://www.freedesktop.org/wiki/Software/desktop\-file\-utils <http://www.freedesktop.org/wiki/Software/desktop-file-utils>.
.PP
At the moment of writing this module is compatible with the way Nautilus (Gnome)
and with Thunar (\s-1XFCE\s0) handle applications for mimetypes. I understand \s-1KDE\s0 
is still working on implementing the freedesktop mime specifications but will
follow. At the very least all perl applications using this module are using
the same defaults.
.SH "EXPORT"
.IX Header "EXPORT"
All methods are exported by default.
.SH "METHODS"
.IX Header "METHODS"
.ie n .IP """mime_applications(MIMETYPE)""" 4
.el .IP "\f(CWmime_applications(MIMETYPE)\fR" 4
.IX Item "mime_applications(MIMETYPE)"
Returns an array of File::DesktopEntry objects. The first
is the default application for this mimetype, the rest are
applications that say they can handle this mimetype.
.Sp
If the first result is undefined there is no default application
and it is good practise to ask the user which application he wants
to use.
.ie n .IP """mime_applications_all(MIMETYPE)""" 4
.el .IP "\f(CWmime_applications_all(MIMETYPE)\fR" 4
.IX Item "mime_applications_all(MIMETYPE)"
Like \f(CW\*(C`mime_applications()\*(C'\fR but also takes into account applications that 
can open mimetypes from which \s-1MIMETYPE\s0 inherits. Parent mimetypes tell
aomething about the data format, all code inherits from text/plain for example.
.ie n .IP """mime_applications_set_default(MIMETYPE, APPLICATION)""" 4
.el .IP "\f(CWmime_applications_set_default(MIMETYPE, APPLICATION)\fR" 4
.IX Item "mime_applications_set_default(MIMETYPE, APPLICATION)"
Save a default application for this mimetype. This action will
affect other applications using the same mechanism to find a default
appliction.
.Sp
\&\s-1APPLICATION\s0 can either be a File::DesktopEntry object or 
the basename of a .desktop file.
.ie n .IP """mime_applications_set_custom(MIMETYPE, COMMAND)""" 4
.el .IP "\f(CWmime_applications_set_custom(MIMETYPE, COMMAND)\fR" 4
.IX Item "mime_applications_set_custom(MIMETYPE, COMMAND)"
Save a custom shell command as default application.
Generates a DesktopEntry file on the fly and calls
\&\f(CW\*(C`mime_applications_set_custom\*(C'\fR.
Returns the DesktopEntry object.
.Sp
No checks are done at all on \s-1COMMAND\s0.
It should however contain at least one word.
.SH "NOTES"
.IX Header "NOTES"
At present the file with defaults is
\&\fI\f(CI$XDG_DATA_HOME\fI/applications/defaults.list\fR.
This file is not specified in any freedesktop spec and if it gets standardized
it should probably be located in \f(CW$XDG_CONFIG_HOME\fR. For this module I tried
to implement the status quo.
.SH "BUGS"
.IX Header "BUGS"
Please mail the author when you encounter any bugs.
.SH "AUTHOR"
.IX Header "AUTHOR"
Jaap Karssenberg || Pardus [Larus] <pardus@cpan.org>
.PP
Copyright (c) 2005,2008 Jaap G Karssenberg. All rights reserved.
This program is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
File::DesktopEntry,
File::MimeInfo,
File::MimeInfo::Magic,
File::BaseDir
.PP
<http://freedesktop.org/wiki/Software_2fdesktop_2dfile_2dutils>
