.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.14)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Catalyst::Engine::HTTP::Prefork 3"
.TH Catalyst::Engine::HTTP::Prefork 3 "2009-06-12" "perl v5.12.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Catalyst::Engine::HTTP::Prefork \- High\-performance pre\-forking Catalyst engine
.SH "SYNOPIS"
.IX Header "SYNOPIS"
.Vb 1
\&    CATALYST_ENGINE=\*(AqHTTP::Prefork\*(Aq script/yourapp_server.pl
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This engine is designed to run as a standalone Catalyst server, without
requiring the use of another web server.  It's goals are high-performance,
\&\s-1HTTP/1\s0.1 compliance, and robustness.  It is also suitable for use as a
faster development server with support for automatic restarting.
.PP
This engine is designed to replace the Catalyst::Engine::HTTP::POE engine,
which is now deprecated.
.SH "RESTART SUPPORT"
.IX Header "RESTART SUPPORT"
This engine supports the same restart options as Catalyst::Engine::HTTP.
The server may also be restarted by sending it a \s-1HUP\s0 signal.
.SH "HTTP/1.1 support"
.IX Header "HTTP/1.1 support"
This engine fully supports the following \s-1HTTP/1\s0.1 features:
.SS "Chunked Requests"
.IX Subsection "Chunked Requests"
Chunked body data is handled transparently by HTTP::Body.
.SS "Chunked Responses"
.IX Subsection "Chunked Responses"
By setting the Transfer-Encoding header to 'chunked', you can indicate you
would like the response to be sent to the client as a chunked response.  Also,
any responses without a content-length will be sent chunked.
.SS "Pipelined Requests"
.IX Subsection "Pipelined Requests"
Browsers sending any number of pipelined requests will be handled properly.
.SS "Keep-Alive"
.IX Subsection "Keep-Alive"
Keep-alive is supported for both \s-1HTTP/1\s0.1 (by default) and \s-1HTTP/1\s0.0 (if a
Connection: keep-alive header is present in the request).
.SH "CUSTOMIZATION"
.IX Header "CUSTOMIZATION"
Additional options may be passed to the engine by modifying
yourapp_server.pl to send additional items to the \fIrun()\fR method.
.SS "min_servers"
.IX Subsection "min_servers"
The minimum number of servers to keep running.  Defaults to 5.
.SS "min_spare_servers"
.IX Subsection "min_spare_servers"
The minimum number of servers to have waiting for requests. Minimum and
maximum numbers should not be set too close to each other or the server will
fork and kill children too often.  Defaults to 2.
.SS "max_spare_servers"
.IX Subsection "max_spare_servers"
The maximum number of servers to have waiting for requests.  Defaults to 10.
.SS "max_servers"
.IX Subsection "max_servers"
The maximum number of child servers to start.  Defaults to 50.
.SS "max_requests"
.IX Subsection "max_requests"
Restart a child after it has served this many requests.  Defaults to 1000.
Note that setting this value to 0 will not cause the child to serve unlimited
requests.  This is a limitation of Net::Server and may be fixed in a future
version.
.SS "restart_graceful"
.IX Subsection "restart_graceful"
This enables Net::Server's leave_children_open_on_hup option.  If set, the parent
will not attempt to close child processes if the parent receives a \s-1SIGHUP\s0.  Each
child will exit as soon as possible after processing the current request if any.
.SS "pidfile"
.IX Subsection "pidfile"
This passes through to Net::Server's pid_file option.  If set, the pidfile is
written to the path.  Default is none.  This file is not removed on server exit
.SS "background"
.IX Subsection "background"
This option passes through to Net::Server and also sets the 'setsid' option to
true.
.SH "AUTHOR"
.IX Header "AUTHOR"
Andy Grundman, <andy@hybridized.org>
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
This program is free software, you can redistribute it and/or modify it under
the same terms as Perl itself.
