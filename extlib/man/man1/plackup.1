.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.14)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PLACKUP 1"
.TH PLACKUP 1 "2010-09-28" "perl v5.12.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
plackup \- Run PSGI application with Plack servers
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&  # read your app from app.psgi file
\&  plackup
\&
\&  # can be passed as an ARGV[0] (or with \-a option)
\&  plackup hello.psgi
\&
\&  # Switch server implementation with \-\-server (or \-s)
\&  plackup \-\-server HTTP::Server::Simple \-\-port 9090 \-\-host 127.0.0.1 test.psgi
\&
\&  # Use UNIX socket to run FCGI daemon
\&  plackup \-s FCGI \-\-listen /tmp/fcgi.sock myapp.psgi
\&
\&  # FCGI external server on port 9090
\&  plackup \-s FCGI \-\-port 9090
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
plackup is a command line utility to run \s-1PSGI\s0 application from the command line.
.PP
plackup automatically figures out the environment it is run in, and
runs your application in that environment. FastCGI, \s-1CGI\s0, AnyEvent and
others can all be detected. See Plack::Loader for the authorative
list.
.PP
\&\f(CW\*(C`plackup\*(C'\fR assumes you have an \f(CW\*(C`app.psgi\*(C'\fR script in your current
directory, that would look like:
.PP
.Vb 4
\&  #!/usr/bin/perl
\&  use MyApp;
\&  my $app = MyApp\->new;
\&  my $handler = sub { $app\->run_psgi(@_) };
.Ve
.PP
The last statement of \f(CW\*(C`app.psgi\*(C'\fR should be a code reference that is a
\&\s-1PSGI\s0 application.
.SH "ARGUMENTS"
.IX Header "ARGUMENTS"
.IP ".psgi" 4
.IX Item ".psgi"
.Vb 1
\&  plackup \-\-host 127.0.0.1 \-\-port 9090 /path/to/app.psgi
.Ve
.Sp
The first non-option argument is used as a \f(CW\*(C`.psgi\*(C'\fR file path. You can
also set this path with \f(CW\*(C`\-a\*(C'\fR or \f(CW\*(C`\-\-app\*(C'\fR option. If omitted, the
default file path is \f(CW\*(C`app.psgi\*(C'\fR in the current directory.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\-a, \-\-app" 4
.IX Item "-a, --app"
\&\f(CW\*(C`\-\-app\*(C'\fR option allows you to locate a \f(CW\*(C`.psgi\*(C'\fR script with a
different name in a different path. This can also be set as a
non-option argument. (See above)
.IP "\-e" 4
.IX Item "-e"
Evaluate the given perl code as a \s-1PSGI\s0 app, much like perl's \f(CW\*(C`\-e\*(C'\fR
option.
.IP "\-o, \-\-host" 4
.IX Item "-o, --host"
The interface a \s-1TCP\s0 based server daemon binds to. Defauts to undef,
which lets most server backends bind the any (*) interface. This
opeion doesn't mean anything if the server does not support \s-1TCP\s0
socket.
.IP "\-p, \-\-port" 4
.IX Item "-p, --port"
The port number a \s-1TCP\s0 based server daemon listens on. Defaults to
5000. This option doesn't mean anything if the server does not support
\&\s-1TCP\s0 socket.
.IP "\-s, \-\-server" 4
.IX Item "-s, --server"
Select a specific implementation to run on using the \f(CW\*(C`PLACK_SERVER\*(C'\fR
environment variable or use the \f(CW\*(C`\-s\*(C'\fR or \f(CW\*(C`\-\-server\*(C'\fR flag which will
be preferred over the environment variable if present.
.IP "\-S, \-\-socket" 4
.IX Item "-S, --socket"
\&\s-1UNIX\s0 domain socket path to listen on. Defaults to undef. This option
doesn't mean anything if the server doesn't support \s-1UNIX\s0 sockets.
.IP "\-l, \-\-listen" 4
.IX Item "-l, --listen"
Addresses to listen on. It could be \*(L"\s-1HOST:PORT\s0\*(R", \*(L":PORT\*(R" or \*(L"\s-1PATH\s0\*(R"
(without colons). It could be multiple but it depends on the server
implementations whether multiple interfaces are supported.
.IP "\-D, \-\-daemonize" 4
.IX Item "-D, --daemonize"
Makes the process go background. It's up to the backend server/handler
implementation whether this option is respected or not.
.IP "\-I" 4
.IX Item "-I"
Specify perl library include path, like \f(CW\*(C`perl\*(C'\fR's \-I option.
.IP "\-M" 4
.IX Item "-M"
Specify modules to load before loading the app code.
.IP "\-E, \-\-env" 4
.IX Item "-E, --env"
Specify the environment option (default is \f(CW\*(C`development\*(C'\fR). You can
set this value by setting \f(CW\*(C`PLACK_ENV\*(C'\fR environment variable as well,
and specifying the value with the command line options writes back to
\&\f(CW\*(C`PLACK_ENV\*(C'\fR as well, so applications or frameworks can tell which
environment setting the application is running on.
.Sp
.Vb 3
\&  # These two are the same
\&  plackup \-E deployment
\&  env PLACK_ENV=deployment plackup
.Ve
.Sp
The value can be anything but commonly used ones are \f(CW\*(C`development\*(C'\fR,
\&\f(CW\*(C`deployment\*(C'\fR and \f(CW\*(C`test\*(C'\fR.
.Sp
If it's set to \f(CW\*(C`development\*(C'\fR, following middleware components are
enabled by default: \fIAccessLog\fR, \fIStackTrace\fR and \fILint\fR.
.IP "\-r, \-\-reload" 4
.IX Item "-r, --reload"
Make plackup to watch updates from your development directory and
restarts the server whenever a file is updated. This option by default
watches the \f(CW\*(C`lib\*(C'\fR directory and the base directory where \fI.psgi\fR
file is located. Use \f(CW\*(C`\-R\*(C'\fR if you want to watch other directories.
.IP "\-R, \-\-Reload" 4
.IX Item "-R, --Reload"
\&\f(CW\*(C`\-R\*(C'\fR option allows you to specify the path to watch file updates
separated by comma (\f(CW\*(C`,\*(C'\fR).
.Sp
.Vb 1
\&  plackup \-R /path/to/project/lib,/path/to/project/templates
.Ve
.IP "\-L, \-\-loader" 4
.IX Item "-L, --loader"
Specify the server loading subclass that implements how to run the
server. Available options are \fIPlack::Loader\fR (default), \fIRestarter\fR
(automatically set when \f(CW\*(C`\-r\*(C'\fR or \f(CW\*(C`\-R\*(C'\fR is used), \fIDelayed\fR and
\&\fIShotgun\fR.
.Sp
See Plack::Loader::Delayed and Plack::Loader::Shotgun when to
use those loader types.
.IP "\-\-access\-log" 4
.IX Item "--access-log"
Specify the pathname of a file where the access log should be written.
By default, in the development environment access logs will go to \s-1STDERR\s0.
.PP
Other options that starts with \f(CW\*(C`\-\-\*(C'\fR are passed through to the backend
server. See each Plack::Handler backend documentations to see which
options are available.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Plack::Runner Plack::Loader
